
.Control-Group {
	margin-top: 		$size-s;
	width: 100%;
	@extend 			._Clearfix;

	&:first-child {
		margin-top: 	0;
	}

	input ,
	select {
		font-weight: 	900;
		box-shadow: 0 1px 3px rgba(0,0,0,0.15) inset;
		@include Round('all', $Control-Border-Radius);
	}
	textarea {
		font-family: $Font-Family-Verdana;
		resize: vertical;
		box-shadow: 0 1px 3px rgba(0,0,0,0.15) inset;
		@include Round('all', $Control-Border-Radius);
	}

	// Отступ между двумя кнопками в ряд
	input[type='submit'] + input[type='submit'] {
		margin-left: 	$size-n;
	}
	span {
		@extend ._Unselectable;
	}
	// Отступ между контрол-группами
	& + .Control-Group {
		margin-top: $size;
	}
	&:first-child {
		margin-top: 0;
	}
	&.Offset {
		padding-top: $size;
		border-top: 1px dashed $clr-grey;

		input[type='submit']	,
		button.Button			{
			display: inline-block;
			width: auto;
			padding: $size-s $size;
			@extend ._Right;
		}
	}

	&.Checkbox.Submit {
		& > label {
			padding: $size-s 0;
			@extend .XS-6;
		}
		& > [type='submit'] {
			@extend .XS-6;
		}
	}

	// Контрол группа умного инпута
	&.Smart {
		@extend ._Clearfix;
		.Input-Smart {
			@extend ._Clearfix;
			.Prefix	 ,
			.Postfix {
				float: left;
				padding: $Control-Padding;
				background-color: $Control-Sublabel-Background-Color;
				line-height: $Control-Line-Height;
				font-size: 14px;
				text-align: center;
			}
			.Prefix {
				border: 1px solid $Control-Border-Color;
				border-right-width: 0;
			}
			input	 ,
			select   ,
			textarea {
				float: left;
			}
		}
	}
}
label.Control-Group {
	float: none!important;
}
.Form-Vertical .Control-Group {
	margin-top: 		$size;

	&:first-child {
  		margin-top: 	0;
	}
}
.Form-Vertical {
	label {
		padding: 		$size-s 0;
		border-color: 	transparent;
	}
	input,
	select,
	textarea {
		padding: 		$Control-Padding;
		border: 		1px solid;
	}
	label,
	input,
	select,
	textarea {
		display: 		block;
		width: 			100%;

	}
}
// Горизонтальная форма
.Form-Horizontal {
	label,
	input,
	select,
	textarea {
		display: 		block;
		float: 			left;
		width: 			70%;
		border: 		1px solid;
		line-height: 	$line-height;
	}
	input,
	select,
	textarea {
		padding: 		$size-xs $size-s;
	}
	label   {
		width: 			30%;
		border-color: 	transparent;
		padding: 		$size-xs $size-s $size-xs 0;

	}
}
label.Checkbox ,
label.Radio    {
  display: 				block;
  width: 				100%;
}

// Чекбокс и радио-кнопка
input[type='checkbox']  ,
input[type='radio']     {
  width: 				auto;
  display: 				inline;
  float: 				none;
  vertical-align: 		middle;
  margin: 				-2px $size-s 0 0;
  border: 				0;
}



// КНОПКА (ОТКЛЮЧЕНА)
.Control-Group input        ,
.Control-Group select       ,
.Control-Group textarea     {
  border: $Control-Border-Width $Control-Border-Color solid;
	@include Transition(border-color, .5s);
}
.Control-Group input:focus   ,
.Control-Group select:focus  ,
.Control-Group textarea:focus{
  outline: 0;
  border-color: $Control-Focus-Border-Color;
}

// КНОПКА
input[type='submit'] {
	width: 				inherit;
	padding: 			$size-s 0;
	font-size: 			110%;
	font-weight: 		100;
	text-align: 		center;
	@extend 			._Button;

	&:hover {
		background-color: $clr-grey-darker;
	}

	&[disabled] {
		background-color: $clr-grey;
		cursor: not-allowed;
	}
}


// FIX reCaptcha
#recaptcha_widget_div{
  display: inline-block;
  width:70%;
}

#recaptcha_widget_div .recaptchatable {
  border: none !important;
  width: 100%;
  padding-bottom: 10px !important;
  display: block;
}


#recaptcha_widget_div .recaptchatable .recaptcha_image_cell,
#recaptcha_widget_div .recaptchatable td{
  padding: 0px 7px 0px 0px !important;
}

#recaptcha_widget_div .recaptchatable #recaptcha_image{
  margin: 0px;
  border:none !important;
}

dl.Tabs {
	@extend ._Clearfix;

	dt {
		margin-left: -1px;
		position: 		relative;
		display: 		table;
		border-top:		1px solid $clr-grey;
		border-bottom:	1px solid $clr-grey;
		width: 			30%;
		float: 			left;
		min-height: 	48px;
		padding: 		$size-xs 0;
		color: 			$clr-grey-darker;
		text-align: 	center;
		cursor: 		pointer;

		@include Transition(#{background-color, color}, 0.5s);

		& > span {
			vertical-align: 	middle;
			display: 			table-cell;
			font-size: 			85%;
		}

		&:hover {
			background-color: $clr-grey-lighter;
			border-color: $clr-grey-darker;
		}

		&.Active {
			border-color: $clr-main!important;
			background-color: $clr-main;
			color: #fff;
		}
		&:first-child {
			border: 1px solid $clr-grey;
			@include Round(left, $Control-Border-Radius);
		}
		&.Wide {
			width: 40%;
			border: 1px solid $clr-grey;
			@include Round(right, $Control-Border-Radius);
		}
	}
	dd {
		display: none;
		float: right;
		margin: 60px 0 0 -100%;
		position: relative;
		width: 100%;
		z-index: 2;

		&.Active {
			display: block;
		}

		& > div {
			padding: $size 0;
		}
	}
}

button.Button ,
input.Button  ,
a.Button      {
	line-height: $line-height;
	color: white;
	@extend ._Button;
	@include Transition(#{border,background-color,color}, .3s);
	&[disabled] {
		cursor: not-allowed;
		background-color: $clr-grey-dark;
		color: $clr-grey-light;
	}

	&.Search {
		@extend ._Search;
	}
	&._Secondary {
		background-color: white;
		border: $Control-Border-Width solid $clr-grey-light;
		color: $clr-grey-dark;
		&:hover {
			background-color: $clr-grey-lighter;
			border-color: $clr-grey-darker;
			color: black
		}
	}
}